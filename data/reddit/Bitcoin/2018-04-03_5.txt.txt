File created at: 1522780285
Subreddit: Bitcoin
Submission title: LND 4.1 released
Submission created utc: 1522732240
Submission score: 168
comments: (level	created_utc	comment_score	comment_body)

0	1522745104	23	Title is wrong: 0.4.1-beta was released, not 4.1, which is probably many years off.
0	1522769050	1	**Notable Changes****DNS Bootstrapping**Reported issues concerning the initial automatic peer bootrapping via DNS have been resolved. In the case that lnd had to fallback to direct TCP resolution, a bug prevented the DNS name from being fully qualified. This new release ensures we craft a valid DNS query.**Channel Funding**The min channel size that we'll create outbound has been raised to 20k satoshis.When using the current version of autopilot users can now set the min and max channel sizes. Before this change, as this mode was primarily used on testnet, the default pilot would at times create a single channel using all available funds, which in many cases is undesirable.Users are now able to set a custom value for the CSV parameter imposed on the remote node using the new --remote_csv_delay argument of the openchannel command. This is useful as peers that have existing business relationships may wish to relax the time-based security parameter in order to allow swift channel force closures.A rounding error (#943) has been fixed. This would at times be an issue when converting from BTC to satoshis as returned by the various RPC interfaces. With this fix we ensure that we can no longer at times leaks a few satoshis when creating channels. On-chain sends were unaffected.**RPC**The ListChannels command now has the ability to filter out active, public, private, and inactive channels (#834). The lncli listchannels command has also gained the ability to filter out these channels with the following new arguments:--active_only--inactive_only--public_only--private_onlyA new macaroon type has been added! In this release, lnd will now generate an invoice.macaroon invoice. The capabilities that this macaroon can unlock are restricted only to: listing invoices, generating invoices, subscribing for invoice notifications, and also generating new addresses (#904).One thing to note is that we'll only generate the invoice macaroon if none of the macaroons are found. This mirrors the existing behavior to allow an instance to be spun up, only having a particular macaroon in its data directory. In order for this new macaroon to be generated, users need to delete their old set of macaroons on disk.**Payment routing**Several cross-implementation payment routing issues have been resolved. Users should find they have an easier time routing directly to another implementation, or taking a route that traverses other implementations. Additionally, we'll now more aggressively route around any faulty channels.nodes based on prior routing failures encountered.**Configuration**A new --tlsdomain config line option has been added (#864). This allows users to generate RPC certs that themselves bind to a particular domain. With this command, users are now able to expose an lnd RPC service that's accessed directly via a domain over TLS.A new --minchansize config option has been added. This option allows users to configure the smallest channel size they'll accept as an incoming payment. Using this command, users can start to filter out the set of incoming channel requests in order to ensure their node has a healthy set of usable channels. The default value for this is 20k satoshis.**Channel State Machine**A bug that would at times cause channel desynchronization when channels peers use asymmetric dust values has been resolved (#920).We'll now ensure that we'll only accept sane commitments. This entails performing a series of quick checks for standardness and context-free consensus rules when we create or accept new commitments. Uncompliant commitments will be rejected.We'll now accept incoming payments that pay more than the amount stated on the invoice.Attempted cooperative channel closures while a commitment still has lingering HTLCs are now disallowed.**Litecoin**Several minor bugs have been fixed within lnd's Litecoin mode. The most notable fix is properly using a sane dust value to ensure we only produce easily mineable commitments.**bitcoind Chain Backend**The bitcoind chain backend will now properly reconnect to bitcoind's interface for zmq in the case of a connection drop, or restart by bitcoind (c653b62).**Peer to Peer Networking**We'll no longer disconnect peers that send address types within NodeAnnouncement messages that we don't know of. This caused unnecessary connection flapping in the prior release as there are several nodes on mainnet which forward such messages (which is spec compliant).A series of bugs have been fixed concerning automatic peer reconnection (#982), exponential backoff when retrying connections to peers. Additionally, we'll now properly perform the brontide handshake asynchronously (#1001). As a result of these fixes, users should see overall lower memory usage and less pending connection manager requests. Subsequent releases will start to introduce dynamic ban/DoS protection to further harden lnds P2P interface.**Build System**This new release of lnd packages an easier to use build system for those that are unfamiliar with go. lnd now has a primary Makefile. A new set of documentation has been added to detail the various commands and arguments of each make directive:https://github.com/lightningnetwork/lnd/blob/master/docs/MAKEFILE.mdWhen using the make build command, lnd will compile in the commit hash that it was built against. This is helpful when debugging as it makes it easier to bisect git commits. Additionally, users will be able to easy discern which commit (in addition to latest released version) that they're running:
1	1522773725	1	Awesome to see this progress.  What a time to be alive!
0	1522735862	4	No nutrino for mainet :( maybe next time.
0	1522752215	4	Awesome news. I ran up a 0.4.0 node the other day, opened a channel, and purchased a sticker. Awesome to see the speed of the transaction. With how low fees are at the moment itâ€™s a great time to set one up. 
0	1522742024	3	Maybe next time it will not be necessary.
0	1522762943	3	32 hours until my node is synched. I'll be there with you soon everyone :) Hope there's still some stickers left. 
0	1522770081	1	do we need it, actually?
0	1522743507	3	Nice, I hope I can finally buy my sticker from blockstream!
1	1522770687	1	I was never able to complete a sticker purchase with 4.0, but the new 4.1 worked perfectly. It's great the see the routing issues I've experienced have been resolved.
2	1522776228	1	Still doesn't work for me. I'm waiting for my channel to open (paid 0,6sat/byte yay!) directly to blockstream, maybe that will work.Are you directly connected to blockstream?
0	1522774349	1	Roas Beef it is good to know we have you working with us. It's re-assuring to see real building of the protocol continuing on.  Especially Lightning Network, which is a real game changer.Thank you to the everyone who stood together for over 2 years helping implement the malleability fix. That was a massive win for the community and without it, Lightning Network would not be anywhere near as far as it is....
0	1522737860	-17	yep just sync up a complete bitcoin node and torture your disc for days to end up in corruption ,bad block or similar
1	1522749324	14	Imagine if blocks were large... 
2	1522750078	-2	The argument for large blocks is that only miners need to run a node, and users can just use SPV clients and trust the miners' nodes to enforce the consensus rules correctly.So, in the alternate reality where blocks are large, you wouldn't bother running a full node.
3	1522751857	15	If one has to trust the miners, why bother with mining. Let Bitmain have a database with all the transactions and just take a small fee.  It would be cheaper, faster and more eco-friendly. /s
3	1522751369	9	Yeah, why bother validating the consensus rules when you can trust a couple mining pool operators and large miners (who totally have the same incentives you do) to do it for you.
4	1522751861	0	Agreed. Let's refute the arguments people are actually making, rather than just saying "but if blocks were big my node wouldn't work any more" and leaving it at that.
5	1522773398	1	He's sarcastically implying that we can't trust miners to enforce the consensus rules correctly because they _don't_ have the same incentives as us. Holders want to maximize the value of the coin, miners want to maximize the value of their investment. Those were only the same thing back when Bitcoin's monetary inflation was high.
6	1522774484	1	I know it was sarcasm. I agree with his actual point, not a non-sarcastic interpretation of his words.
3	1522766460	1	Here we go again... 
3	1522779497	1	So trust a third party to validate everything, lol, this is the anti-thesis of Bitcoin, why not just stick to central banks.
3	1522752043	1	>  and users can just use SPV clients and trust the miners' nodes to enforce the consensus rules correctly.May as well the banks, or Israelites with my money, no thanks.
1	1522756290	6	You don't need a full node for LN; lnd supports the neutrino backend which is a lightnode.
